/*
 * This file is generated by jOOQ.
 */
package com.example.travel.database.schema.tables.records;


import com.example.travel.database.schema.tables.Customer;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CustomerRecord extends UpdatableRecordImpl<CustomerRecord> implements Record6<Integer, Integer, String, String, String, String> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sql4458432.customer.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sql4458432.customer.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sql4458432.customer.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>sql4458432.customer.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sql4458432.customer.firstname</code>.
     */
    public void setFirstname(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>sql4458432.customer.firstname</code>.
     */
    public String getFirstname() {
        return (String) get(2);
    }

    /**
     * Setter for <code>sql4458432.customer.lastname</code>.
     */
    public void setLastname(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>sql4458432.customer.lastname</code>.
     */
    public String getLastname() {
        return (String) get(3);
    }

    /**
     * Setter for <code>sql4458432.customer.email</code>.
     */
    public void setEmail(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>sql4458432.customer.email</code>.
     */
    public String getEmail() {
        return (String) get(4);
    }

    /**
     * Setter for <code>sql4458432.customer.passportcode</code>.
     */
    public void setPassportcode(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>sql4458432.customer.passportcode</code>.
     */
    public String getPassportcode() {
        return (String) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, Integer, String, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, Integer, String, String, String, String> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Customer.CUSTOMER.CUSTOMER_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Customer.CUSTOMER.USER_ID;
    }

    @Override
    public Field<String> field3() {
        return Customer.CUSTOMER.FIRSTNAME;
    }

    @Override
    public Field<String> field4() {
        return Customer.CUSTOMER.LASTNAME;
    }

    @Override
    public Field<String> field5() {
        return Customer.CUSTOMER.EMAIL;
    }

    @Override
    public Field<String> field6() {
        return Customer.CUSTOMER.PASSPORTCODE;
    }

    @Override
    public Integer component1() {
        return getCustomerId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public String component3() {
        return getFirstname();
    }

    @Override
    public String component4() {
        return getLastname();
    }

    @Override
    public String component5() {
        return getEmail();
    }

    @Override
    public String component6() {
        return getPassportcode();
    }

    @Override
    public Integer value1() {
        return getCustomerId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public String value3() {
        return getFirstname();
    }

    @Override
    public String value4() {
        return getLastname();
    }

    @Override
    public String value5() {
        return getEmail();
    }

    @Override
    public String value6() {
        return getPassportcode();
    }

    @Override
    public CustomerRecord value1(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public CustomerRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public CustomerRecord value3(String value) {
        setFirstname(value);
        return this;
    }

    @Override
    public CustomerRecord value4(String value) {
        setLastname(value);
        return this;
    }

    @Override
    public CustomerRecord value5(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public CustomerRecord value6(String value) {
        setPassportcode(value);
        return this;
    }

    @Override
    public CustomerRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CustomerRecord
     */
    public CustomerRecord() {
        super(Customer.CUSTOMER);
    }

    /**
     * Create a detached, initialised CustomerRecord
     */
    public CustomerRecord(Integer customerId, Integer userId, String firstname, String lastname, String email, String passportcode) {
        super(Customer.CUSTOMER);

        setCustomerId(customerId);
        setUserId(userId);
        setFirstname(firstname);
        setLastname(lastname);
        setEmail(email);
        setPassportcode(passportcode);
    }
}
