/*
 * This file is generated by jOOQ.
 */
package com.example.travel.database.schema.tables.records;


import com.example.travel.database.schema.tables.Travel;

import java.time.LocalDate;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record10;
import org.jooq.Row10;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TravelRecord extends UpdatableRecordImpl<TravelRecord> implements Record10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, LocalDate, LocalDate> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>sql4458432.travel.travel_id</code>.
     */
    public void setTravelId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>sql4458432.travel.travel_id</code>.
     */
    public Integer getTravelId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>sql4458432.travel.user_id</code>.
     */
    public void setUserId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>sql4458432.travel.user_id</code>.
     */
    public Integer getUserId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>sql4458432.travel.customer_id</code>.
     */
    public void setCustomerId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>sql4458432.travel.customer_id</code>.
     */
    public Integer getCustomerId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>sql4458432.travel.type_id</code>.
     */
    public void setTypeId(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>sql4458432.travel.type_id</code>.
     */
    public Integer getTypeId() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>sql4458432.travel.country_id</code>.
     */
    public void setCountryId(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>sql4458432.travel.country_id</code>.
     */
    public Integer getCountryId() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>sql4458432.travel.hotel_id</code>.
     */
    public void setHotelId(Integer value) {
        set(5, value);
    }

    /**
     * Getter for <code>sql4458432.travel.hotel_id</code>.
     */
    public Integer getHotelId() {
        return (Integer) get(5);
    }

    /**
     * Setter for <code>sql4458432.travel.transport_id</code>.
     */
    public void setTransportId(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>sql4458432.travel.transport_id</code>.
     */
    public Integer getTransportId() {
        return (Integer) get(6);
    }

    /**
     * Setter for <code>sql4458432.travel.nutrition_id</code>.
     */
    public void setNutritionId(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>sql4458432.travel.nutrition_id</code>.
     */
    public Integer getNutritionId() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>sql4458432.travel.arrival</code>.
     */
    public void setArrival(LocalDate value) {
        set(8, value);
    }

    /**
     * Getter for <code>sql4458432.travel.arrival</code>.
     */
    public LocalDate getArrival() {
        return (LocalDate) get(8);
    }

    /**
     * Setter for <code>sql4458432.travel.departure</code>.
     */
    public void setDeparture(LocalDate value) {
        set(9, value);
    }

    /**
     * Getter for <code>sql4458432.travel.departure</code>.
     */
    public LocalDate getDeparture() {
        return (LocalDate) get(9);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record10 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, LocalDate, LocalDate> fieldsRow() {
        return (Row10) super.fieldsRow();
    }

    @Override
    public Row10<Integer, Integer, Integer, Integer, Integer, Integer, Integer, Integer, LocalDate, LocalDate> valuesRow() {
        return (Row10) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Travel.TRAVEL.TRAVEL_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Travel.TRAVEL.USER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Travel.TRAVEL.CUSTOMER_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Travel.TRAVEL.TYPE_ID;
    }

    @Override
    public Field<Integer> field5() {
        return Travel.TRAVEL.COUNTRY_ID;
    }

    @Override
    public Field<Integer> field6() {
        return Travel.TRAVEL.HOTEL_ID;
    }

    @Override
    public Field<Integer> field7() {
        return Travel.TRAVEL.TRANSPORT_ID;
    }

    @Override
    public Field<Integer> field8() {
        return Travel.TRAVEL.NUTRITION_ID;
    }

    @Override
    public Field<LocalDate> field9() {
        return Travel.TRAVEL.ARRIVAL;
    }

    @Override
    public Field<LocalDate> field10() {
        return Travel.TRAVEL.DEPARTURE;
    }

    @Override
    public Integer component1() {
        return getTravelId();
    }

    @Override
    public Integer component2() {
        return getUserId();
    }

    @Override
    public Integer component3() {
        return getCustomerId();
    }

    @Override
    public Integer component4() {
        return getTypeId();
    }

    @Override
    public Integer component5() {
        return getCountryId();
    }

    @Override
    public Integer component6() {
        return getHotelId();
    }

    @Override
    public Integer component7() {
        return getTransportId();
    }

    @Override
    public Integer component8() {
        return getNutritionId();
    }

    @Override
    public LocalDate component9() {
        return getArrival();
    }

    @Override
    public LocalDate component10() {
        return getDeparture();
    }

    @Override
    public Integer value1() {
        return getTravelId();
    }

    @Override
    public Integer value2() {
        return getUserId();
    }

    @Override
    public Integer value3() {
        return getCustomerId();
    }

    @Override
    public Integer value4() {
        return getTypeId();
    }

    @Override
    public Integer value5() {
        return getCountryId();
    }

    @Override
    public Integer value6() {
        return getHotelId();
    }

    @Override
    public Integer value7() {
        return getTransportId();
    }

    @Override
    public Integer value8() {
        return getNutritionId();
    }

    @Override
    public LocalDate value9() {
        return getArrival();
    }

    @Override
    public LocalDate value10() {
        return getDeparture();
    }

    @Override
    public TravelRecord value1(Integer value) {
        setTravelId(value);
        return this;
    }

    @Override
    public TravelRecord value2(Integer value) {
        setUserId(value);
        return this;
    }

    @Override
    public TravelRecord value3(Integer value) {
        setCustomerId(value);
        return this;
    }

    @Override
    public TravelRecord value4(Integer value) {
        setTypeId(value);
        return this;
    }

    @Override
    public TravelRecord value5(Integer value) {
        setCountryId(value);
        return this;
    }

    @Override
    public TravelRecord value6(Integer value) {
        setHotelId(value);
        return this;
    }

    @Override
    public TravelRecord value7(Integer value) {
        setTransportId(value);
        return this;
    }

    @Override
    public TravelRecord value8(Integer value) {
        setNutritionId(value);
        return this;
    }

    @Override
    public TravelRecord value9(LocalDate value) {
        setArrival(value);
        return this;
    }

    @Override
    public TravelRecord value10(LocalDate value) {
        setDeparture(value);
        return this;
    }

    @Override
    public TravelRecord values(Integer value1, Integer value2, Integer value3, Integer value4, Integer value5, Integer value6, Integer value7, Integer value8, LocalDate value9, LocalDate value10) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TravelRecord
     */
    public TravelRecord() {
        super(Travel.TRAVEL);
    }

    /**
     * Create a detached, initialised TravelRecord
     */
    public TravelRecord(Integer travelId, Integer userId, Integer customerId, Integer typeId, Integer countryId, Integer hotelId, Integer transportId, Integer nutritionId, LocalDate arrival, LocalDate departure) {
        super(Travel.TRAVEL);

        setTravelId(travelId);
        setUserId(userId);
        setCustomerId(customerId);
        setTypeId(typeId);
        setCountryId(countryId);
        setHotelId(hotelId);
        setTransportId(transportId);
        setNutritionId(nutritionId);
        setArrival(arrival);
        setDeparture(departure);
    }
}
